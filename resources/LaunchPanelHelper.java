// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources;

import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;

/**
 * Script Name   : <b>LaunchPanel</b><br>
 * Generated     : <b>2006/11/06 8:55:44 AM</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows 2000 x86 5.0 <br>
 * 
 * @since  November 06, 2006
 * @author agoodno
 */
public abstract class LaunchPanelHelper extends RationalTestScript
{
	/**
	 * Case: with default state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : Case
	 * 		iconDescription : Case.jpg
	 * 		name : JB_Case
	 * 		.classIndex : 0
	 */
	protected GuiTestObject _case() 
	{
		return new GuiTestObject(
                        getMappedTestObject("_case"));
	}
	/**
	 * Case: with specific test context and state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : Case
	 * 		iconDescription : Case.jpg
	 * 		name : JB_Case
	 * 		.classIndex : 0
	 */
	protected GuiTestObject _case(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("_case"), anchor, flags);
	}
	
	/**
	 * Financial: with default state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : Financial
	 * 		iconDescription : Financial.gif
	 * 		name : JB_Fin
	 * 		.classIndex : 3
	 */
	protected GuiTestObject financial() 
	{
		return new GuiTestObject(
                        getMappedTestObject("financial"));
	}
	/**
	 * Financial: with specific test context and state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : Financial
	 * 		iconDescription : Financial.gif
	 * 		name : JB_Fin
	 * 		.classIndex : 3
	 */
	protected GuiTestObject financial(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("financial"), anchor, flags);
	}
	
	/**
	 * JadeFrame: with default state.
	 *		.captionText : Washington County - Court Applications - dev
	 * 		.class : gov.wicourts.jade.gui.JadeFrame
	 * 		accessibleContext.accessibleName : Washington County - Court Applications - dev
	 */
	protected TopLevelTestObject jadeFrame() 
	{
		return new TopLevelTestObject(
                        getMappedTestObject("jadeFrame"));
	}
	/**
	 * JadeFrame: with specific test context and state.
	 *		.captionText : Washington County - Court Applications - dev
	 * 		.class : gov.wicourts.jade.gui.JadeFrame
	 * 		accessibleContext.accessibleName : Washington County - Court Applications - dev
	 */
	protected TopLevelTestObject jadeFrame(TestObject anchor, long flags) 
	{
		return new TopLevelTestObject(
                        getMappedTestObject("jadeFrame"), anchor, flags);
	}
	
	/**
	 * Jury: with default state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : Jury
	 * 		iconDescription : Juror.gif
	 * 		name : JB_Jury
	 * 		.classIndex : 2
	 */
	protected GuiTestObject jury() 
	{
		return new GuiTestObject(
                        getMappedTestObject("jury"));
	}
	/**
	 * Jury: with specific test context and state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : Jury
	 * 		iconDescription : Juror.gif
	 * 		name : JB_Jury
	 * 		.classIndex : 2
	 */
	protected GuiTestObject jury(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("jury"), anchor, flags);
	}
	
	/**
	 * Maintenance: with default state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : Maintenance
	 * 		iconDescription : Maint2.gif
	 * 		name : JB_Maint
	 * 		.classIndex : 1
	 */
	protected GuiTestObject maintenance() 
	{
		return new GuiTestObject(
                        getMappedTestObject("maintenance"));
	}
	/**
	 * Maintenance: with specific test context and state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : Maintenance
	 * 		iconDescription : Maint2.gif
	 * 		name : JB_Maint
	 * 		.classIndex : 1
	 */
	protected GuiTestObject maintenance(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("maintenance"), anchor, flags);
	}
	
	/**
	 * Reports: with default state.
	 *		text : Reports
	 * 		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName :  Reports   
	 * 		iconDescription : Statistics.gif
	 * 		name : JB_Report
	 * 		.classIndex : 4
	 */
	protected GuiTestObject reports() 
	{
		return new GuiTestObject(
                        getMappedTestObject("reports"));
	}
	/**
	 * Reports: with specific test context and state.
	 *		text : Reports
	 * 		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName :  Reports   
	 * 		iconDescription : Statistics.gif
	 * 		name : JB_Report
	 * 		.classIndex : 4
	 */
	protected GuiTestObject reports(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("reports"), anchor, flags);
	}
	
	/**
	 * Locate and return the verification point Case_standard object in the SUT.
	 */
	protected IFtVerificationPoint Case_standardVP() 
	{
		return vp("Case_standard");
	}
	protected IFtVerificationPoint Case_standardVP(TestObject anchor)
	{
		return vp("Case_standard", anchor);
	}
	
	/**
	 * Locate and return the verification point Financial_standard object in the SUT.
	 */
	protected IFtVerificationPoint Financial_standardVP() 
	{
		return vp("Financial_standard");
	}
	protected IFtVerificationPoint Financial_standardVP(TestObject anchor)
	{
		return vp("Financial_standard", anchor);
	}
	
	/**
	 * Locate and return the verification point Jury_standard object in the SUT.
	 */
	protected IFtVerificationPoint Jury_standardVP() 
	{
		return vp("Jury_standard");
	}
	protected IFtVerificationPoint Jury_standardVP(TestObject anchor)
	{
		return vp("Jury_standard", anchor);
	}
	
	/**
	 * Locate and return the verification point Maintenance_standard object in the SUT.
	 */
	protected IFtVerificationPoint Maintenance_standardVP() 
	{
		return vp("Maintenance_standard");
	}
	protected IFtVerificationPoint Maintenance_standardVP(TestObject anchor)
	{
		return vp("Maintenance_standard", anchor);
	}
	
	/**
	 * Locate and return the verification point Reports_standard object in the SUT.
	 */
	protected IFtVerificationPoint Reports_standardVP() 
	{
		return vp("Reports_standard");
	}
	protected IFtVerificationPoint Reports_standardVP(TestObject anchor)
	{
		return vp("Reports_standard", anchor);
	}
	
	

	protected LaunchPanelHelper()
	{
		setScriptName("LaunchPanel");
	}
	
}