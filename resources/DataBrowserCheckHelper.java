// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources;

import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;

/**
 * Script Name   : <b>DataBrowserCheck</b><br>
 * Generated     : <b>2006/11/24 1:32:24 PM</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows 2000 x86 5.0 <br>
 * 
 * @since  November 24, 2006
 * @author agoodno
 */
public abstract class DataBrowserCheckHelper extends RationalTestScript
{
	/**
	 * DataBrowser: with default state.
	 *		.captionText : ccap on Sybase JConnect55(127.0.0.1:5000/)
	 * 		.class : com.jet.apps.databrowser.ui.DataBrowser
	 * 		accessibleContext.accessibleName : ccap on Sybase JConnect55(127.0.0.1:5000/)
	 */
	protected TopLevelTestObject dataBrowser() 
	{
		return new TopLevelTestObject(
                        getMappedTestObject("dataBrowser"));
	}
	/**
	 * DataBrowser: with specific test context and state.
	 *		.captionText : ccap on Sybase JConnect55(127.0.0.1:5000/)
	 * 		.class : com.jet.apps.databrowser.ui.DataBrowser
	 * 		accessibleContext.accessibleName : ccap on Sybase JConnect55(127.0.0.1:5000/)
	 */
	protected TopLevelTestObject dataBrowser(TestObject anchor, long flags) 
	{
		return new TopLevelTestObject(
                        getMappedTestObject("dataBrowser"), anchor, flags);
	}
	
	/**
	 * JMenuBar: with default state.
	 *		.class : javax.swing.JMenuBar
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject jMenuBar() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("jMenuBar"));
	}
	/**
	 * JMenuBar: with specific test context and state.
	 *		.class : javax.swing.JMenuBar
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject jMenuBar(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("jMenuBar"), anchor, flags);
	}
	
	/**
	 * JMenuBar: with default state.
	 *		.class : javax.swing.JMenuBar
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject jMenuBar2() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("jMenuBar2"));
	}
	/**
	 * JMenuBar: with specific test context and state.
	 *		.class : javax.swing.JMenuBar
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject jMenuBar2(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("jMenuBar2"), anchor, flags);
	}
	
	/**
	 * JSplitPane: with default state.
	 *		.class : javax.swing.JSplitPane
	 * 		orientation : 0
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject jSplitPane() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("jSplitPane"));
	}
	/**
	 * JSplitPane: with specific test context and state.
	 *		.class : javax.swing.JSplitPane
	 * 		orientation : 0
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject jSplitPane(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("jSplitPane"), anchor, flags);
	}
	
	/**
	 * JTable: with default state.
	 *		.class : javax.swing.JTable
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject jTable() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("jTable"));
	}
	/**
	 * JTable: with specific test context and state.
	 *		.class : javax.swing.JTable
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject jTable(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("jTable"), anchor, flags);
	}
	
	/**
	 * ResultsTabPane: with default state.
	 *		tabCount : 2
	 * 		.class : com.jet.apps.databrowser.ui.ResultsTabPane
	 * 		.tabs : {TreeView,StdData}
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject resultsTabPane() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("resultsTabPane"));
	}
	/**
	 * ResultsTabPane: with specific test context and state.
	 *		tabCount : 2
	 * 		.class : com.jet.apps.databrowser.ui.ResultsTabPane
	 * 		.tabs : {TreeView,StdData}
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject resultsTabPane(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("resultsTabPane"), anchor, flags);
	}
	
	/**
	 * StdData: with default state.
	 *		.tabText : StdData
	 * 		.class : com.jet.apps.databrowser.ui.RSTablePanel
	 */
	protected GuiTestObject stdData() 
	{
		return new GuiTestObject(
                        getMappedTestObject("stdData"));
	}
	/**
	 * StdData: with specific test context and state.
	 *		.tabText : StdData
	 * 		.class : com.jet.apps.databrowser.ui.RSTablePanel
	 */
	protected GuiTestObject stdData(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("stdData"), anchor, flags);
	}
	
	/**
	 * textPlain: with default state.
	 *		.class : com.jet.apps.databrowser.editor.SyntaxEditorPane
	 * 		.classIndex : 0
	 */
	protected TextGuiSubitemTestObject textPlain() 
	{
		return new TextGuiSubitemTestObject(
                        getMappedTestObject("textPlain"));
	}
	/**
	 * textPlain: with specific test context and state.
	 *		.class : com.jet.apps.databrowser.editor.SyntaxEditorPane
	 * 		.classIndex : 0
	 */
	protected TextGuiSubitemTestObject textPlain(TestObject anchor, long flags) 
	{
		return new TextGuiSubitemTestObject(
                        getMappedTestObject("textPlain"), anchor, flags);
	}
	
	/**
	 * Locate and return the verification point JTable_selected object in the SUT.
	 */
	protected IFtVerificationPoint JTable_selectedVP() 
	{
		return vp("JTable_selected");
	}
	protected IFtVerificationPoint JTable_selectedVP(TestObject anchor)
	{
		return vp("JTable_selected", anchor);
	}
	
	

	protected DataBrowserCheckHelper()
	{
		setScriptName("DataBrowserCheck");
	}
	
}